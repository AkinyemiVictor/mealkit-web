/**
 * Shared UI copy catalogue. Strings that appear in multiple components live here so designers
 * can tweak messaging from a single file without hunting through JSX.
 */
const copy = {
  search: {
    placeholderHeader: "Search for bananas, grains, or meal kits",
    placeholderPage: 'Try "cavendish bananas" or "smoked fish"',
    introDefault: "Search for fruits, grains, pantry bundles, or any product you need delivered fresh.",
    emptyTitle: "No matches",
    emptyDescription: (term) =>
      `We couldn't find any items for "${term}". Try searching by product name or browse a category.`,
    emptyStartTitle: "Start exploring",
    emptyStartDescription: "Enter a product name or ingredient to discover what's in stock today.",
    browseCategoriesCta: "Browse categories",
    suggestionsLabel: "Recent searches",
  },
  cart: {
    sectionTitle: "Shopping cart",
    subtitle: "Secure checkout. Fresh groceries guaranteed.",
    tagLabel: (count, label) => `${count} ${label}`,
    emptyMessage: "Your cart is empty. Explore the catalogue and add something fresh.",
    recentlyViewedEyebrow: "Just For You",
    recentlyViewedTitle: "Recently Viewed",
    recentlyViewedFallback: "Your browsing history will appear here once you view some items.",
    crossSellEyebrow: "Recommended",
    crossSellTitle: "Customers Also Bought",
    unavailableMessage: "This item is no longer available.",
    limitedMessage: "Limited stock",
    removeUnavailableMessage: "Remove unavailable items to complete checkout.",
    limitedNotice: "Some items have limited stock. Checkout soon to secure them.",
  },
  checkout: {
    eyebrow: "Secure checkout",
    title: "Complete your order",
    subtitle: "Confirm delivery details, choose a payment option, and place your market-fresh order.",
    backToCart: "Back to cart",
    deliveryDetails: "Delivery details",
    paymentHeading: "Payment method",
    paymentHint: "Choose the option that suits you. We process payments securely via SSL encryption.",
    deliverySlots: {
      morning: "Morning (8am - 11am)",
      afternoon: "Afternoon (12pm - 3pm)",
      evening: "Evening (4pm - 8pm)",
    },
    paymentMethods: [
      {
        value: "card",
        title: "Pay with card",
        subtitle: "Visa, MasterCard, Verve",
        badges: [
          {
            type: "image",
            src: "/assets/icons/png/thumbnails/bank card thumbnails/visa card.png",
            label: "Visa",
          },
          {
            type: "image",
            src: "/assets/icons/png/thumbnails/bank card thumbnails/master card.png",
            label: "Mastercard",
          },
          {
            type: "image",
            src: "/assets/icons/png/thumbnails/bank card thumbnails/verve card.png",
            label: "Verve",
          },
        ],
      },
      {
        value: "bank",
        title: "Bank transfer",
        subtitle: "Receive account details instantly",
        badges: [
          { label: "OPay" },
          { label: "PalmPay" },
        ],
      },
      { value: "delivery", title: "Pay on delivery", subtitle: "Cash or POS on arrival" },
    ],
    labels: {
      fullName: "Full name",
      email: "Email",
      phone: "Phone number",
      address: "Delivery address",
      city: "City / LGA",
      deliverySlot: "Preferred delivery slot",
      notes: "Order notes (optional)",
      cardName: "Name on card",
      cardNumber: "Card number",
      cardExpiry: "Expiry date",
      cardCvc: "CVC",
      subtotal: "Items",
      delivery: "Delivery",
      total: "Total payable",
      paymentMethod: "Payment method",
    },
    placeholders: {
      fullName: "e.g. Adaeze Okafor",
      email: "e.g. ada@mealkit.ng",
      phone: "e.g. +234 912 000 0000",
      address: "Street, estate, and any delivery notes",
      city: "e.g. Ibadan",
      notes: "Entrance instructions, buzzer code, etc.",
      cardName: "Exact name on your card",
      cardNumber: "1234 5678 9012 3456",
      cardExpiry: "MM/YY",
      cardCvc: "123",
    },
    validation: {
      required: "Please complete this field.",
      name: "Name can contain letters and spaces only.",
      email: "Enter a valid email address ending with .com.",
      phone: "Enter a valid phone number with country code and digits only.",
      cityService: "Sorry, we currently service Ibadan only.",
      cardNumber: "Card number must contain 16 digits.",
      cardExpiry: "Use the MM/YY format.",
      cardCvc: "CVC must be 3 digits.",
    },
    status: {
      processingTitle: "Processing payment",
      processingSubtitle: "Hang tight while we confirm your payment details.",
      successTitle: (name) => `Thank you, ${name || "friend"}!`,
      successSubtitle: (email) =>
        email ? `We've emailed a receipt to ${email}. You'll also get SMS updates on delivery day.` : null,
      bankInstructionsTitle: "Complete your bank transfer",
      bankInstructionsSubtitle: (total) =>
        total ? `Transfer ${total} to the account below and use your order ID as narration.` : null,
      deliveryInstructionsTitle: "Pay on delivery selected",
      deliveryInstructionsSubtitle:
        "Have your cash or POS-ready when our rider arrives. We'll contact you ahead of delivery.",
    },
    summaryHeading: "Order summary",
    freeDeliveryThreshold: 40000,
    deliveryFee: 1500,
    freeDeliveryLabel: "FREE",
    confirmation: {
      orderIdLabel: "Order ID",
      deliverySlotLabel: "Delivery slot",
      paymentMethodLabel: "Payment method",
      itemsHeading: "Items in this order",
      totalLabel: "Order total",
    },
    receiptPage: {
      successHeading: "Payment successful",
      successSubheading: "Your order is confirmed and on its way to our fulfillment team.",
      failureHeading: "Payment unsuccessful",
      failureSubheading: "We couldn't confirm your payment. Review the details below and try again.",
      missingTitle: "No recent checkout",
      missingDescription: "We couldn't find a recent order receipt. Start a new checkout to place an order.",
      backToCheckout: "Return to checkout",
      viewOrders: "Browse more products",
      viewReceipt: "View receipt",
      tryAgain: "Try payment again",
      contactSupport: "Contact support",
    },
    bankAccount: {
      name: "MealKit Fresh Foods Ltd",
      number: "0123456789",
      bank: "GTBank",
    },
    emptyTitle: "Cart empty",
    emptyDescription: "Add fresh groceries to your cart to continue to checkout.",
    emptyCta: "Browse products",
    completeOrder: "Pay & place order",
  },
  general: {
    continueShopping: "Continue shopping",
    seeAll: "See all",
  },
};

export default copy;
